name: Mayflower Kicker Backend CI/CD

on: 
  push: 
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    services: 
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports: 
          - 5432:5432

    steps:
      - name: Code aus Repository holen
        uses: actions/checkout@v3

      - name: Python installieren
        uses: actions/setup-python@v4
        with: 
          python-version: "3.10"

      - name: Überprüfe Python-Installation
        run: |
          python --version
          pip --version

      - name: Abhängigkeiten installieren
        run: |
          python -m venv venv
          ls -l venv/bin/   # Debugging: Zeigt, ob die virtuelle Umgebung richtig erstellt wurde
          source venv/bin/activate
          pip install -r backend/requirements.txt
          
      - name: Backend testen
        env: 
          DATABASE_URL: postgresql://test_user:test_password@localhost/test_db
        run: |
          set -x   # Debugging: Zeigt alle ausgeführten Befehle
          source venv/bin/activate
          pytest backend/tests --maxfail=1 --disable-warnings -q

      - name: Docker Version überprüfen
        run: |
          docker --version
          docker info

      - name: Login bei DockerHub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker Image bauen und pushen
        if: success()
        run: |
          set -x   # Debugging: Zeigt alle ausgeführten Befehle
          docker build -t my-backend .
          docker tag my-backend ${{ secrets.DOCKER_USERNAME }}/my-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-backend:latest

      - name: Tests durchführen
        run: |
          pytest backend/tests --maxfail=1 --disable-warnings -q
